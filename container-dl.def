Bootstrap: docker
from:  ubuntu:focal-20221130
#from: molinav/pyenv:3.7-ubuntu-20.04
#from: kitware/vtk-for-ci:v9.1.0
#From: nvcr.io/nvidia/tensorflow:19.10-py3

%environment
    export TZ="America/Recife"
    export PATH="/usr/local/cuda-10.0/bin${PATH:+:${PATH}}"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda-10.0/lib64"
    export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/cuda-10.0/lib64"


%post    
    export TZ="America/Recife"
    export DEBIAN_FRONTEND="noninteractive"
    rm /etc/apt/sources.list
    touch /etc/apt/sources.list

    echo "deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse" >> /etc/apt/sources.list
    echo "deb http://archive.canonical.com/ubuntu focal partner" >> /etc/apt/sources.list
    echo "deb-src http://archive.canonical.com/ubuntu focal partner" >> /etc/apt/sources.list

    cat /etc/apt/sources.list
    

    apt-get update && apt-get install -y

    apt-get install -y make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
    libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl    
    apt-get install libjpeg-dev zlib1g-dev -y
    apt-get install libx11-6 -y
    apt-get install libopenmpi-dev -y
    apt-get install libhdf5-serial-dev -y


    apt-get install software-properties-common -y
    add-apt-repository ppa:deadsnakes/ppa
    apt-get update && apt-get install -y

    apt-get install python3.7 -y
    apt-get install wget curl -y
    apt-get install python3.7-distutils -y
    apt-get install python3.7-dev -y
    
    curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    pwd
    ls    
    python3.7 get-pip.py "pip==19.*"

    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb
    dpkg -i cuda-keyring_1.0-1_all.deb

    apt-get update && apt-get install -y
    apt-get install cuda-10-0 -y
       
    pip install nibabel
    pip install typing-extensions
    pip install typeguard
    pip install mpi4py==3.1.3
    pip install networkx==2.4
    pip install numpy==1.18.1
    pip install scikit_image==0.16.2
    pip install scikit_learn==0.22.*
    pip install scipy==1.4.1
    pip install SimpleITK==1.2.*
    pip install tensorflow-gpu==1.14.0
    pip install trimesh==3.6.16
    pip install vtk==9.*

    pip uninstall protobuf -y
    pip install protobuf==3.19.*

    echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main" >> /etc/apt/sources.list
    echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe" >> /etc/apt/sources.list

    apt-get update && apt-get install -y

    apt-get install gcc-5.3 g++-5.3 -y 

    rm /usr/bin/gcc
    rm /usr/bin/cc
    rm /usr/bin/c++
    rm /usr/bin/g++ 

    ln -s /usr/bin/gcc-5.3 /usr/bin/gcc
    ln -s /usr/bin/gcc-5.3 /usr/bin/cc
    ln -s /usr/bin/g++-5.3 /usr/bin/c++
    ln -s /usr/bin/g++-5.3 /usr/bin/g++

    cd /usr/local/lib/python3.7/dist-packages/tensorflow/
    ln -s libtensorflow_framework.so.1 libtensorflow_framework.so    

    